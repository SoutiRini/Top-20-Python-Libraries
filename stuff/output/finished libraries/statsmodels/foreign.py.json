{
    "source file": "foreign.py",
    "line number": "1058",
    "func name": "savetxt",
    "func arg": "(fname, X, names, fmt, delimiter)",
    "comments": "Save an array to a text file.\n\nThis is just a copy of numpy.savetxt patched to support structured arrays or a header of names.\n\nDoes not include py3 support now in savetxt.\n\nParameters ---------- fname : filename or file handle If the filename ends in ``.gz``, the file is automatically saved in compressed gzip format.\n\n`loadtxt` understands gzipped files transparently. X : array_like Data to be saved to a text file. names : list, optional If given names will be the column header in the text file.\n\nIf None and X is a structured or recarray then the names are taken from X.dtype.names. fmt : str or sequence of strs A single format (%10.5f), a sequence of formats, or a multi-format string, e.g. 'Iteration %d -- %10.5f', in which case `delimiter` is ignored. delimiter : str Character separating columns.\n\nSee Also -------- save : Save an array to a binary file in NumPy ``.npy`` format savez : Save several arrays into a ``.npz`` compressed archive\n\nNotes ----- Further explanation of the `fmt` parameter (``%[flag]width[.precision]specifier``):\n\nflags: ``-`` : left justify\n\n``+`` : Forces to preceed result with + or -.\n\n``0`` : Left pad the number with zeros instead of space (see width).\n\nwidth: Minimum number of characters to be printed. The value is not truncated if it has more characters.\n\nprecision:\n\n- For integer specifiers (eg. ``d,i,o,x``), the minimum number of digits.\n\n- For ``e, E`` and ``f`` specifiers, the number of digits to print after the decimal point.\n\n- For ``g`` and ``G``, the maximum number of significant digits.\n\n- For ``s``, the maximum number of characters.\n\nspecifiers: ``c`` : character\n\n``d`` or ``i`` : signed decimal integer\n\n``e`` or ``E`` : scientific notation with ``e`` or ``E``.\n\n``f`` : decimal floating point\n\n``g,G`` : use the shorter of ``e,E`` or ``f``\n\n``o`` : signed octal\n\n``s`` : str of characters\n\n``u`` : unsigned decimal integer\n\n``x,X`` : unsigned hexadecimal integer\n\nThis explanation of ``fmt`` is not complete, for an exhaustive specification see [1]_.\n\nReferences ---------- .. [1] `Format Specification Mini-Language <http://docs.python.org/library/string.html# format-specification-mini-language>`_, Python Documentation.\n\nExamples -------- >>> savetxt('test.out', x, delimiter=',')\n\n # x is an array >>> savetxt('test.out', (x,y,z))\n\n # x,y,z equal sized 1D arrays >>> savetxt('test.out', x, fmt='%1.4e')\n\n # use exponential notation\n"
}