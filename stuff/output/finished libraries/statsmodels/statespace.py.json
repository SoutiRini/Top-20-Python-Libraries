{
    "source file": "statespace.py",
    "line number": "16",
    "func name": "statespace",
    "func arg": "(endog, exog, order, seasonal_order, include_constant, enforce_stationarity, enforce_invertibility, concentrate_scale, start_params, fit_kwargs)",
    "comments": "Estimate SARIMAX parameters using state space methods.\n\nParameters ---------- endog : array_like Input time series array. order : tuple, optional The (p,d,q) order of the model for the number of AR parameters, differences, and MA parameters. Default is (0, 0, 0). seasonal_order : tuple, optional The (P,D,Q,s) order of the seasonal component of the model for the AR parameters, differences, MA parameters, and periodicity. Default is (0, 0, 0, 0). include_constant : bool, optional Whether to add a constant term in `exog` if it's not already there. The estimate of the constant will then appear as one of the `exog` parameters. If `exog` is None, then the constant will represent the mean of the process. enforce_stationarity : bool, optional Whether or not to transform the AR parameters to enforce stationarity in the autoregressive component of the model. Default is True. enforce_invertibility : bool, optional Whether or not to transform the MA parameters to enforce invertibility in the moving average component of the model. Default is True. concentrate_scale : bool, optional Whether or not to concentrate the scale (variance of the error term) out of the likelihood. This reduces the number of parameters estimated by maximum likelihood by one. start_params : array_like, optional Initial guess of the solution for the loglikelihood maximization. The AR polynomial must be stationary. If `enforce_invertibility=True` the MA poylnomial must be invertible. If not provided, default starting parameters are computed using the Hannan-Rissanen method. fit_kwargs : dict, optional Arguments to pass to the state space model's `fit` method.\n##### Returns\n* **parameters **: SARIMAXParams object\n\n* **other_results **: Bunch\n    Includes two components, `spec`, containing the `SARIMAXSpecification`\n    instance corresponding to the input arguments; and\n    `state_space_results`, corresponding to the results from the underlying\n    state space model and Kalman filter / smoother.\n\n* **.. [1] Durbin, James, and Siem Jan Koopman. 2012.\n   Time Series Analysis by State Space Methods**: Second Edition.\n   Oxford University Press.\n\n"
}