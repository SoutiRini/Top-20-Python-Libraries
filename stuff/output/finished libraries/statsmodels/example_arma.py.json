{
    "source file": "example_arma.py",
    "line number": "269",
    "func name": "pltxcorr",
    "func arg": "(x, y, normed, detrend, usevlines, maxlags, **kwargs)",
    "comments": "call signature\n\ndef xcorr(self, x, y, normed=True, detrend=detrend_none, usevlines=True, maxlags=10, **kwargs):\n\nPlot the cross correlation between *x* and *y*.\n\nIf *normed* = *True*, normalize the data by the cross correlation at 0-th lag.\n\n*x* and y are detrended by the *detrend* callable (default no normalization).\n\n*x* and *y* must be equal length.\n\nData are plotted as ``plot(lags, c, **kwargs)``\n\nReturn value is a tuple (*lags*, *c*, *line*) where:\n\n- *lags* are a length ``2*maxlags+1`` lag vector\n\n- *c* is the ``2*maxlags+1`` auto correlation vector\n\n- *line* is a :class:`~matplotlib.lines.Line2D` instance returned by :func:`~matplotlib.pyplot.plot`.\n\nThe default *linestyle* is *None* and the default *marker* is 'o', though these can be overridden with keyword args.\n\nThe cross correlation is performed with :func:`numpy.correlate` with *mode* = 2.\n\nIf *usevlines* is *True*:\n\n:func:`~matplotlib.pyplot.vlines` rather than :func:`~matplotlib.pyplot.plot` is used to draw vertical lines from the origin to the xcorr.\n\nOtherwise the plotstyle is determined by the kwargs, which are :class:`~matplotlib.lines.Line2D` properties.\n\nThe return value is a tuple (*lags*, *c*, *linecol*, *b*) where *linecol* is the :class:`matplotlib.collections.LineCollection` instance and *b* is the *x*-axis.\n\n*maxlags* is a positive integer detailing the number of lags to show. The default value of *None* will return all ``(2*len(x)-1)`` lags.\n\n**Example:**\n\n:func:`~matplotlib.pyplot.xcorr` above, and :func:`~matplotlib.pyplot.acorr` below.\n\n**Example:**\n\n.. plot:: mpl_examples/pylab_examples/xcorr_demo.py\n"
}