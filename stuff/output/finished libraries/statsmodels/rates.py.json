{
    "source file": "rates.py",
    "line number": "272",
    "func name": "tost_poisson_2indep",
    "func arg": "(count1, exposure1, count2, exposure2, low, upp, method)",
    "comments": "Equivalence test based on two one-sided `test_proportions_2indep`\n\nThis assumes that we have two independent binomial samples.\n\nThe Null and alternative hypothesis for equivalence testing are\n\nH0: g1 / g2 <= low or upp <= g1 / g2 H1: low < g1 / g2 < upp\n\nwhere g1 and g2 are the Poisson rates.\n\nParameters ---------- count1: int Number of events in first sample exposure1: float Total exposure (time * subjects) in first sample count2: int Number of events in first sample exposure2: float Total exposure (time * subjects) in first sample low, upp : equivalence margin for the ratio of Poisson rates method: string Method for the test statistic and the p-value. Defaults to `'score'`. Current Methods are based on Gu et. al 2008 Implemented are 'wald', 'score' and 'sqrt' based asymptotic normal distribution, and the exact conditional test 'exact-cond', and its mid-point version 'cond-midp', see Notes\n##### Returns\n* **pvalue **: float\n    p-value is the max of the pvalues of the two one-sided tests\n\n* **t1 **: test results\n    results instance for one-sided hypothesis at the upper margin\n\n* **'wald'**: method W1A, wald test, variance based on separate estimates\n\n* **'score'**: method W2A, score test, variance based on estimate under Null\n\n* **'wald-log'**: W3A  not implemented\n\n* **'sqrt'**: W5A, based on variance stabilizing square root transformation\n\n* **'exact-cond'**: exact conditional test based on binomial distribution\n\n* **'cond-midp'**: midpoint-pvalue of exact conditional test\n\n* **Gu, Ng, Tang, Schucany 2008**: Testing the Ratio of Two Poisson Rates,\n\n"
}