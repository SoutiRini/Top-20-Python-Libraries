{
    "source file": "markov_switching.py",
    "line number": "227",
    "func name": "cy_kim_smoother_log",
    "func arg": "(regime_transition, predicted_joint_probabilities, filtered_joint_probabilities)",
    "comments": "Kim smoother in log space using Cython inner loop.\n\nParameters ---------- regime_transition : ndarray Matrix of regime transition probabilities, shaped either (k_regimes, k_regimes, 1) or if there are time-varying transition probabilities (k_regimes, k_regimes, nobs). predicted_joint_probabilities : ndarray Array containing Pr[S_t=s_t, ..., S_{t-order}=s_{t-order} | Y_{t-1}]\n\n- the joint probability of the current and previous `order` periods being in each combination of regimes conditional on time t-1 information. Shaped (k_regimes,) * (order + 1) + (nobs,). filtered_joint_probabilities : ndarray Array containing Pr[S_t=s_t, ..., S_{t-order}=s_{t-order} | Y_{t}]\n\n- the joint probability of the current and previous `order` periods being in each combination of regimes conditional on time t information. Shaped (k_regimes,) * (order + 1) + (nobs,).\n##### Returns\n* **smoothed_joint_probabilities **: ndarray\n    Array containing Pr[S_t=s_t, ..., S_{t-order}=s_{t-order} | Y_T] -\n    the joint probability of the current and previous `order` periods\n    being in each combination of regimes conditional on all information.\n    Shaped (k_regimes,) * (order + 1) + (nobs,).\n\n* **smoothed_marginal_probabilities **: ndarray\n    Array containing Pr[S_t=s_t | Y_T] - the probability of being in each\n    regime conditional on all information. Shaped (k_regimes, nobs).\n\n"
}