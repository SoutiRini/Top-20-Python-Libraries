{
    "source file": "correlation_tools.py",
    "line number": "934",
    "func name": "kernel_covariance",
    "func arg": "(exog, loc, groups, kernel, bw)",
    "comments": "Use kernel averaging to estimate a multivariate covariance function.\n\nThe goal is to estimate a covariance function C(x, y) = cov(Z(x), Z(y)) where x, y are vectors in R^p (e.g. representing locations in time or space), and Z(.) represents a multivariate process on R^p.\n\nThe data used for estimation can be observed at arbitrary values of the position vector, and there can be multiple independent observations from the process.\n\nParameters ---------- exog : array_like The rows of exog are realizations of the process obtained at specified points. loc : array_like The rows of loc are the locations (e.g. in space or time) at which the rows of exog are observed. groups : array_like The values of groups are labels for distinct independent copies of the process. kernel : MultivariateKernel instance, optional An instance of MultivariateKernel, defaults to GaussianMultivariateKernel. bw : array_like or scalar A bandwidth vector, or bandwidth multiplier.\n\nIf a 1d array, it contains kernel bandwidths for each component of the process, and must have length equal to the number of columns of exog.\n\nIf a scalar, bw is a bandwidth multiplier used to adjust the default bandwidth; if None, a default bandwidth is used.\n##### Returns\n* **.. [1] Genton M, W Kleiber (2015).  Cross covariance functions for\n    multivariate geostatics.  Statistical Science 30(2).\n    https**: //arxiv.org/pdf/1507.08017.pdf\n\n"
}