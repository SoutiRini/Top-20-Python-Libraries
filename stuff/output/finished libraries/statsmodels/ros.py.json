{
    "source file": "ros.py",
    "line number": "476",
    "func name": "impute_ros",
    "func arg": "(observations, censorship, df, min_uncensored, max_fraction_censored, substitution_fraction, transform_in, transform_out, as_array)",
    "comments": "Impute censored dataset using Regression on Order Statistics (ROS).\n\nMethod described in *Nondetects and Data Analysis* by Dennis R. Helsel (John Wiley, 2005) to estimate the left-censored (non-detect) values of a dataset. When there is insufficient non-censorded data, simple substitution is used.\n\nParameters ---------- observations : str or array-like Label of the column or the float array of censored observations\n\ncensorship : str Label of the column or the bool array of the censorship status of the observations.\n\n* True if censored, * False if uncensored\n\ndf : pandas.DataFrame, optional If `observations` and `censorship` are labels, this is the DataFrame that contains those columns.\n\nmin_uncensored : int (default is 2) The minimum number of uncensored values required before ROS can be used to impute the censored observations. When this criterion is not met, simple substituion is used instead.\n\nmax_fraction_censored : float (default is 0.8) The maximum fraction of censored data below which ROS can be used to impute the censored observations. When this fraction is exceeded, simple substituion is used instead.\n\nsubstitution_fraction : float (default is 0.5) The fraction of the detection limit to be used during simple substitution of the censored values.\n\ntransform_in : callable (default is numpy.log) Transformation to be applied to the values prior to fitting a line to the plotting positions vs. uncensored values.\n\ntransform_out : callable (default is numpy.exp) Transformation to be applied to the imputed censored values estimated from the previously computed best-fit line.\n\nas_array : bool (default is True) When True, a numpy array of the imputed observations is returned. Otherwise, a modified copy of the original dataframe with all of the intermediate calculations is returned.\n##### Returns\n* **imputed **: numpy.array (default) or pandas.DataFrame\n    The final observations where the censored values have either been\n    imputed through ROS or substituted as a fraction of the\n    detection limit.\n\n"
}