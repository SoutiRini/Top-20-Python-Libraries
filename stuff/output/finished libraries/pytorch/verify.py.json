{
    "source file": "verify.py",
    "line number": "228",
    "func name": "verify",
    "func arg": "(model, args, backend, verbose, training, rtol, atol, test_args, do_constant_folding, example_outputs, opset_version, keep_initializers_as_inputs, add_node_names, operator_export_type)",
    "comments": "Export a model into ONNX, import it into a specified ONNX backend, and then on a few random inputs verify that PyTorch and the backend produced the same results.  Requires onnx to be installed.\n\nThis function may spuriously fail: some operators are implemented with different numerical precision in an ONNX backend, in which case an unstable network (e.g., Inception) may blow up these numerical instabilities.\n\nThis situation is less likely to happen if your model has been trained.\n\nHowever, if this is not the case, you may have found a bug!\n\nPlease report it to the PyTorch developers.\n\nYou can also debug the issue yourself by removing suffixes of operators from your model until verification passes.\n\nFor reproducibility, we recommend explicitly setting PyTorch's seed before invoking this function.\n\nArguments: model (torch.nn.Module): the model to be exported and verified args (tuple of arguments): the inputs to the model, e.g., such that ``model(*args)`` is a valid invocation of the model.\n\nAny non-Variable arguments will be hard-coded into the exported model; any Variable arguments will become inputs of the exported model, in the order they occur in args.\n\nIf args is a Variable, this is equivalent to having called it with a 1-ary tuple of that Variable. (Note: passing keyword arguments to the model is not currently supported.\n\nGive us a shout if you need it.) backend (onnx.backend module): ONNX backend to verify with verbose (bool, default False): if specified, we will print out a debug description of the trace being exported. training (bool, default False): export the model in training mode.\n\nAt the moment, ONNX is oriented towards exporting models for inference only, so you will generally not need to set this to True. rtol (float, default 1e-3): relative precision required test_args (int or iterable of args, default 2): either an integer specifying the number of random arguments to generate, or an iterable producing arguments to test under. opset_version (int, default None): the opset version of the model to export. If not specified, the default value in symboli_helper will be used in utils._export(). operator_export_type (enum, default OperatorExportTypes.ONNX): the operator export type to use when exporting the model. The default value converts all operators to ONNX ops.\n"
}