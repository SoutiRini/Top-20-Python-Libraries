{
    "source file": "spawn.py",
    "line number": "162",
    "func name": "spawn",
    "func arg": "(fn, args, nprocs, join, daemon, start_method)",
    "comments": "Spawns ``nprocs`` processes that run ``fn`` with ``args``.\n\nIf one of the processes exits with a non-zero exit status, the remaining processes are killed and an exception is raised with the cause of termination. In the case an exception was caught in the child process, it is forwarded and its traceback is included in the exception raised in the parent process.\n\nArguments: fn (function): Function is called as the entrypoint of the spawned process. This function must be defined at the top level of a module so it can be pickled and spawned. This is a requirement imposed by multiprocessing.\n\nThe function is called as ``fn(i, *args)``, where ``i`` is the process index and ``args`` is the passed through tuple of arguments.\n\nargs (tuple): Arguments passed to ``fn``. nprocs (int): Number of processes to spawn. join (bool): Perform a blocking join on all processes. daemon (bool): The spawned processes' daemon flag. If set to True, daemonic processes will be created. start_method (string): (deprecated) this method will always use ``spawn`` as the start method. To use a different start method use ``start_processes()``.\n##### Returns\n* ****: class\n\n"
}