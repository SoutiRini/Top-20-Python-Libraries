{
    "source file": "basic.py",
    "line number": "1476",
    "func name": "matrix_balance",
    "func arg": "(A, permute, scale, separate, overwrite_a)",
    "comments": "Compute a diagonal similarity transformation for row/column balancing.\n\nThe balancing tries to equalize the row and column 1-norms by applying a similarity transformation such that the magnitude variation of the matrix entries is reflected to the scaling matrices.\n\nMoreover, if enabled, the matrix is first permuted to isolate the upper triangular parts of the matrix and, again if scaling is also enabled, only the remaining subblocks are subjected to scaling.\n\nThe balanced matrix satisfies the following equality\n\n.. math::\n\nB = T^{-1} A T\n\nThe scaling coefficients are approximated to the nearest power of 2 to avoid round-off errors.\n\nParameters ---------- A : (n, n) array_like Square data matrix for the balancing. permute : bool, optional The selector to define whether permutation of A is also performed prior to scaling. scale : bool, optional The selector to turn on and off the scaling. If False, the matrix will not be scaled. separate : bool, optional This switches from returning a full matrix of the transformation to a tuple of two separate 1-D permutation and scaling arrays. overwrite_a : bool, optional This is passed to xGEBAL directly. Essentially, overwrites the result to the data. It might increase the space efficiency. See LAPACK manual for details. This is False by default.\n##### Returns\n* **B **: (n, n) ndarray\n    Balanced matrix\n\n* **T **: (n, n) ndarray\n    A possibly permuted diagonal matrix whose nonzero entries are\n    integer powers of 2 to avoid numerical truncation errors.\n\n* **scale, perm **: (n,) ndarray\n    If ``separate`` keyword is set to True then instead of the array\n    ``T`` above, the scaling and the permutation vectors are given\n    separately as a tuple without allocating the full array ``T``.\n\n* **.. versionadded**: \n\n* **.. [1] **: B.N. Parlett and C. Reinsch, \"Balancing a Matrix for\n   Calculation of Eigenvalues and Eigenvectors\", Numerische Mathematik,\n   Vol.13(4), 1969, DOI\n\n* **.. [2] **: R. James, J. Langou, B.R. Lowery, \"On matrix balancing and\n   eigenvector computation\", 2014, Available online\n\n* **.. [3] **: D.S. Watkins. A case where balancing is harmful.\n   Electron. Trans. Numer. Anal, Vol.23, 2006.\n\n"
}