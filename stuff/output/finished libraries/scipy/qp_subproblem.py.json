{
    "source file": "qp_subproblem.py",
    "line number": "411",
    "func name": "projected_cg",
    "func arg": "(H, c, Z, Y, b, trust_radius, lb, ub, tol, max_iter, max_infeasible_iter, return_all)",
    "comments": "Solve EQP problem with projected CG method.\n\nSolve equality-constrained quadratic programming problem ``min 1/2 x.T H x + x.t c``\n\nsubject to ``A x + b = 0`` and, possibly, to trust region constraints ``||x|| < trust_radius`` and box constraints ``lb <= x <= ub``.\n\nParameters ---------- H : LinearOperator (or sparse matrix or ndarray), shape (n, n) Operator for computing ``H v``. c : array_like, shape (n,) Gradient of the quadratic objective function. Z : LinearOperator (or sparse matrix or ndarray), shape (n, n) Operator for projecting ``x`` into the null space of A. Y : LinearOperator,\n\nsparse matrix, ndarray, shape (n, m) Operator that, for a given a vector ``b``, compute smallest norm solution of ``A x + b = 0``. b : array_like, shape (m,) Right-hand side of the constraint equation. trust_radius : float, optional Trust radius to be considered. By default, uses ``trust_radius=inf``, which means no trust radius at all. lb : array_like, shape (n,), optional Lower bounds to each one of the components of ``x``. If ``lb[i] = -Inf`` the lower bound for the i-th component is just ignored (default). ub : array_like, shape (n, ), optional Upper bounds to each one of the components of ``x``. If ``ub[i] = Inf`` the upper bound for the i-th component is just ignored (default). tol : float, optional Tolerance used to interrupt the algorithm. max_iter : int, optional Maximum algorithm iterations. Where ``max_inter <= n-m``. By default, uses ``max_iter = n-m``. max_infeasible_iter : int, optional Maximum infeasible (regarding box constraints) iterations the algorithm is allowed to take. By default, uses ``max_infeasible_iter = n-m``. return_all : bool, optional When ``true``, return the list of all vectors through the iterations.\n##### Returns\n* **x **: array_like, shape (n,)\n    Solution of the EQP problem.\n\n* **info **: Dict\n    Dictionary containing the following\n\n* **.. [1] Gould, Nicholas IM, Mary E. Hribar, and Jorge Nocedal.\n       \"On the solution of equality constrained quadratic\n        programming problems arising in optimization.\"\n        SIAM Journal on Scientific Computing 23.4 (2001)**: 1376-1395.\n\n"
}