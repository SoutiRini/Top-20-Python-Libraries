{
    "source file": "projections.py",
    "line number": "289",
    "func name": "projections",
    "func arg": "(A, method, orth_tol, max_refin, tol)",
    "comments": "Return three linear operators related with a given matrix A.\n\nParameters ---------- A : sparse matrix (or ndarray), shape (m, n) Matrix ``A`` used in the projection. method : string, optional Method used for compute the given linear operators. Should be one of:\n\n- 'NormalEquation': The operators will be computed using the so-called normal equation approach explained in [1]_. In order to do so the Cholesky factorization of ``(A A.T)`` is computed. Exclusive for sparse matrices.\n\n- 'AugmentedSystem': The operators will be computed using the so-called augmented system approach explained in [1]_. Exclusive for sparse matrices.\n\n- 'QRFactorization': Compute projections using QR factorization. Exclusive for dense matrices.\n\n- 'SVDFactorization': Compute projections using SVD factorization. Exclusive for dense matrices.\n\north_tol : float, optional Tolerance for iterative refinements. max_refin : int, optional Maximum number of iterative refinements. tol : float, optional Tolerance for singular values.\n##### Returns\n* **Z **: LinearOperator, shape (n, n)\n    Null-space operator. For a given vector ``x``,\n    the null space operator is equivalent to apply\n    a projection matrix ``P = I - A.T inv(A A.T) A``\n    to the vector. It can be shown that this is\n    equivalent to project ``x`` into the null space\n    of A.\n\n* **LS **: LinearOperator, shape (m, n)\n    Least-squares operator. For a given vector ``x``,\n    the least-squares operator is equivalent to apply a\n    pseudoinverse matrix ``pinv(A.T) = inv(A A.T) A``\n    to the vector. It can be shown that this vector\n    ``pinv(A.T) x`` is the least_square solution to\n    ``A.T y = x``.\n\n* **Y **: LinearOperator, shape (n, m)\n    Row-space operator. For a given vector ``x``,\n    the row-space operator is equivalent to apply a\n    projection matrix ``Q = A.T inv(A A.T)``\n    to the vector.  It can be shown that this\n    vector ``y = Q x``  the minimum norm solution\n    of ``A y = x``.\n\n* **.. [1] Gould, Nicholas IM, Mary E. Hribar, and Jorge Nocedal.\n    \"On the solution of equality constrained quadratic\n    programming problems arising in optimization.\"\n    SIAM Journal on Scientific Computing 23.4 (2001)**: 1376-1395.\n\n"
}