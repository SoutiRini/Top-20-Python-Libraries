{
    "source file": "_procrustes33.py",
    "line number": "15",
    "func name": "procrustes",
    "func arg": "(data1, data2)",
    "comments": "Procrustes analysis, a similarity test for two data sets.\n\nEach input matrix is a set of points or vectors (the rows of the matrix). The dimension of the space is the number of columns of each matrix. Given two identically sized matrices, procrustes standardizes both such that:\n\n- :math:`tr(AA^{T}) = 1`.\n\n- Both sets of points are centered around the origin.\n\nProcrustes ([1]_, [2]_) then applies the optimal transform to the second matrix (including scaling/dilation, rotations, and reflections) to minimize :math:`M^{2}=\\sum(data1-data2)^{2}`, or the sum of the squares of the pointwise differences between the two input datasets.\n\nThis function was not designed to handle datasets with different numbers of datapoints (rows).\n\nIf two data sets have different dimensionality (different number of columns), simply add columns of zeros to the smaller of the two.\n\nParameters ---------- data1 : array_like Matrix, n rows represent points in k (columns) space `data1` is the reference data, after it is standardised, the data from `data2` will be transformed to fit the pattern in `data1` (must have >1 unique points). data2 : array_like n rows of data in k space to be fit to `data1`.\n\nMust be the\n\nsame shape ``(numrows, numcols)`` as data1 (must have >1 unique points).\n##### Returns\n* **mtx1 **: array_like\n    A standardized version of `data1`.\n\n* **mtx2 **: array_like\n    The orientation of `data2` that best fits `data1`. Centered, but not\n    necessarily\n\n* **disparity **: float\n\n"
}