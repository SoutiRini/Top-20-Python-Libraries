{
    "source file": "_bunch.py",
    "line number": "33",
    "func name": "_make_tuple_bunch",
    "func arg": "(typename, field_names, extra_field_names, module)",
    "comments": "Create a namedtuple-like class with additional attributes.\n\nThis function creates a subclass of tuple that acts like a namedtuple and that has additional attributes.\n\nThe additional attributes are listed in `extra_field_names`.\n\nThe values assigned to these attributes are not part of the tuple.\n\nThe reason this function exists is to allow functions in SciPy that currently return a tuple or a namedtuple to returned objects that have additional attributes, while maintaining backwards compatibility.\n\nThis should only be used to enhance *existing* functions in SciPy. New functions are free to create objects as return values without having to maintain backwards compatibility with an old tuple or namedtuple return value.\n\nParameters ---------- typename : str The name of the type. field_names : list of str List of names of the values to be stored in the tuple. These names will also be attributes of instances, so the values in the tuple can be accessed by indexing or as attributes.\n\nAt least one name is required.\n\nSee the Notes for additional restrictions. extra_field_names : list of str, optional List of names of values that will be stored as attributes of the object.\n\nSee the notes for additional restrictions.\n##### Returns\n* **cls **: type\n    The new class.\n\n* **and `extra_field_names`**: \n\n* **names `x` and `y`) that will also have the attributes `w` and `beta`**: \n\n* **`result1` acts like a tuple of length 2**: \n\n* **>>> result1[**: ]\n\n* **attributes**: \n\n"
}