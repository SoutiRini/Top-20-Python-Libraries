{
    "source file": "stats157.py",
    "line number": "7954",
    "func name": "rankdata",
    "func arg": "(a, method)",
    "comments": "Assign ranks to data, dealing with ties appropriately.\n\nBy default (``axis=None``), the data array is first flattened, and a flat array of ranks is returned. Separately reshape the rank array to the shape of the data array if desired (see Examples).\n\nRanks begin at 1.\n\nThe `method` argument controls how ranks are assigned to equal values.\n\nSee [1]_ for further discussion of ranking methods.\n\nParameters ---------- a : array_like The array of values to be ranked. method : {'average', 'min', 'max', 'dense', 'ordinal'}, optional The method used to assign ranks to tied elements. The following methods are available (default is 'average'):\n\n* 'average': The average of the ranks that would have been assigned to all the tied values is assigned to each value. * 'min': The minimum of the ranks that would have been assigned to all the tied values is assigned to each value.\n\n(This is also referred to as \"competition\" ranking.) * 'max': The maximum of the ranks that would have been assigned to all the tied values is assigned to each value. * 'dense': Like 'min', but the rank of the next highest element is assigned the rank immediately after those assigned to the tied elements. * 'ordinal': All values are given a distinct rank, corresponding to the order that the values occur in `a`. axis : {None, int}, optional Axis along which to perform the ranking. If ``None``, the data array is first flattened.\n##### Returns\n* **ranks **: ndarray\n     An array of size equal to the size of `a`, containing rank\n     scores.\n\n* **.. [1] \"Ranking\", https**: //en.wikipedia.org/wiki/Ranking\n\n"
}