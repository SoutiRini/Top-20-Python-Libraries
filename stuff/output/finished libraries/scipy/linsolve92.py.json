{
    "source file": "linsolve92.py",
    "line number": "491",
    "func name": "spsolve_triangular",
    "func arg": "(A, b, lower, overwrite_A, overwrite_b, unit_diagonal)",
    "comments": "Solve the equation `A x = b` for `x`, assuming A is a triangular matrix.\n\nParameters ---------- A : (M, M) sparse matrix A sparse square triangular matrix. Should be in CSR format. b : (M,) or (M, N) array_like Right-hand side matrix in `A x = b` lower : bool, optional Whether `A` is a lower or upper triangular matrix. Default is lower triangular matrix. overwrite_A : bool, optional Allow changing `A`. The indices of `A` are going to be sorted and zero entries are going to be removed. Enabling gives a performance gain. Default is False. overwrite_b : bool, optional Allow overwriting data in `b`. Enabling gives a performance gain. Default is False. If `overwrite_b` is True, it should be ensured that `b` has an appropriate dtype to be able to store the result. unit_diagonal : bool, optional If True, diagonal elements of `a` are assumed to be 1 and will not be referenced.\n\n.. versionadded:: 1.4.0\n##### Returns\n* **x **: (M,) or (M, N) ndarray\n    Solution to the system `A x = b`. Shape of return matches shape of `b`.\n\n"
}