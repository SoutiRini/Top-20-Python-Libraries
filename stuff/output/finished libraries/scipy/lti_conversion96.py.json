{
    "source file": "lti_conversion96.py",
    "line number": "335",
    "func name": "cont2discrete",
    "func arg": "(system, dt, method, alpha)",
    "comments": "Transform a continuous to a discrete state-space system.\n\nParameters ---------- system : a tuple describing the system or an instance of `lti` The following gives the number of elements in the tuple and the interpretation:\n\n* 1: (instance of `lti`) * 2: (num, den) * 3: (zeros, poles, gain) * 4: (A, B, C, D)\n\ndt : float The discretization time step. method : str, optional Which method to use:\n\n* gbt: generalized bilinear transformation * bilinear: Tustin's approximation (\"gbt\" with alpha=0.5) * euler: Euler (or forward differencing) method (\"gbt\" with alpha=0) * backward_diff: Backwards differencing (\"gbt\" with alpha=1.0) * zoh: zero-order hold (default) * foh: first-order hold (*versionadded: 1.3.0*) * impulse: equivalent impulse response (*versionadded: 1.3.0*)\n\nalpha : float within [0, 1], optional The generalized bilinear transformation weighting parameter, which should only be specified with method=\"gbt\", and is ignored otherwise\n##### Returns\n* **sysd **: tuple containing the discrete system\n    Based on the input type, the output will be of the form\n    * (num, den, dt)   for transfer function input\n    * (zeros, poles, gain, dt)   for zeros-poles-gain input\n    * (A, B, C, D, dt) for state-space system input\n\n* **.. [1] https**: //en.wikipedia.org/wiki/Discretization#Discretization_of_linear_state_space_models\n\n* **.. [2] http**: //techteach.no/publications/discretetime_signals_systems/discrete.pdf\n\n* **.. [3] G. Zhang, X. Chen, and T. Chen, Digital redesign via the generalized\n    bilinear transformation, Int. J. Control, vol. 82, no. 4, pp. 741-754,\n    2009.\n    (https**: //www.mypolyuweb.hk/~magzhang/Research/ZCC09_IJC.pdf)\n\n* **.. [4] G. F. Franklin, J. D. Powell, and M. L. Workman, Digital control\n    of dynamic systems, 3rd ed. Menlo Park, Calif**: Addison-Wesley,\n    pp. 204-206, 1998.\n\n"
}