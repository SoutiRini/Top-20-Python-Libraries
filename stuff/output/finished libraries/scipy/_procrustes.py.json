{
    "source file": "_procrustes.py",
    "line number": "12",
    "func name": "orthogonal_procrustes",
    "func arg": "(A, B, check_finite)",
    "comments": "Compute the matrix solution of the orthogonal Procrustes problem.\n\nGiven matrices A and B of equal shape, find an orthogonal matrix R that most closely maps A to B using the algorithm given in [1]_.\n\nParameters ---------- A : (M, N) array_like Matrix to be mapped. B : (M, N) array_like Target matrix. check_finite : bool, optional Whether to check that the input matrices contain only finite numbers. Disabling may give a performance gain, but may result in problems (crashes, non-termination) if the inputs do contain infinities or NaNs.\n##### Returns\n* **R **: (N, N) ndarray\n    The matrix solution of the orthogonal Procrustes problem.\n    Minimizes the Frobenius norm of ``(A @ R) - B``, subject to\n    ``R.T @ R = I``.\n\n* **scale **: float\n    Sum of the singular values of ``A.T @ B``.\n\n"
}