{
    "source file": "_dendrogram.py",
    "line number": "17",
    "func name": "create_dendrogram",
    "func arg": "(X, orientation, labels, colorscale, distfun, linkagefun, hovertext, color_threshold)",
    "comments": "Function that returns a dendrogram Plotly figure object. This is a thin wrapper around scipy.cluster.hierarchy.dendrogram.\n\nSee also https://dash.plot.ly/dash-bio/clustergram.\n\n:param (ndarray) X: Matrix of observations as array of arrays :param (str) orientation: 'top', 'right', 'bottom', or 'left' :param (list) labels: List of axis category labels(observation labels) :param (list) colorscale: Optional colorscale for the dendrogram tree. Requires 8 colors to be specified, the 7th of which is ignored.\n\nWith scipy>=1.5.0, the 2nd, 3rd and 6th are used twice as often as the others. Given a shorter list, the missing values are replaced with defaults and with a longer list the extra values are ignored. :param (function) distfun: Function to compute the pairwise distance from the observations :param (function) linkagefun: Function to compute the linkage matrix from the pairwise distances :param (list[list]) hovertext: List of hovertext for constituent traces of dendrogram clusters :param (double) color_threshold: Value at which the separation of clusters will be made\n\nExample 1: Simple bottom oriented dendrogram\n\n>>> from plotly.figure_factory import create_dendrogram\n\n>>> import numpy as np\n\n>>> X = np.random.rand(10,10) >>> fig = create_dendrogram(X) >>> fig.show()\n\nExample 2: Dendrogram to put on the left of the heatmap\n\n>>> from plotly.figure_factory import create_dendrogram\n\n>>> import numpy as np\n\n>>> X = np.random.rand(5,5) >>> names = ['Jack', 'Oxana', 'John', 'Chelsea', 'Mark'] >>> dendro = create_dendrogram(X, orientation='right', labels=names) >>> dendro.update_layout({'width':700, 'height':500}) # doctest: +SKIP >>> dendro.show()\n\nExample 3: Dendrogram with Pandas\n\n>>> from plotly.figure_factory import create_dendrogram\n\n>>> import numpy as np >>> import pandas as pd\n\n>>> Index= ['A','B','C','D','E','F','G','H','I','J'] >>> df = pd.DataFrame(abs(np.random.randn(10, 10)), index=Index) >>> fig = create_dendrogram(df, labels=Index) >>> fig.show()\n"
}