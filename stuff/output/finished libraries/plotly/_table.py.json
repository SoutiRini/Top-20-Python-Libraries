{
    "source file": "_table.py",
    "line number": "27",
    "func name": "create_table",
    "func arg": "(table_text, colorscale, font_colors, index, index_title, annotation_offset, height_constant, hoverinfo, **kwargs)",
    "comments": "Function that creates data tables.\n\nSee also the plotly.graph_objects trace :class:`plotly.graph_objects.Table`\n\n:param (pandas.Dataframe | list[list]) text: data for table. :param (str|list[list]) colorscale: Colorscale for table where the color at value 0 is the header color, .5 is the first table color and 1 is the second table color. (Set .5 and 1 to avoid the striped table effect). Default=[[0, '#66b2ff'], [.5, '#d9d9d9'], [1, '#ffffff']] :param (list) font_colors: Color for fonts in table. Can be a single color, three colors, or a color for each row in the table. Default=['#000000'] (black text for the entire table) :param (int) height_constant: Constant multiplied by # of rows to create table height. Default=30. :param (bool) index: Create (header-colored) index column index from Pandas dataframe or list[0] for each list in text. Default=False. :param (string) index_title: Title for index column. Default=''. :param kwargs: kwargs passed through plotly.graph_objs.Heatmap. These kwargs describe other attributes about the annotated Heatmap trace such as the colorscale. For more information on valid kwargs call help(plotly.graph_objs.Heatmap)\n\nExample 1: Simple Plotly Table\n\n>>> from plotly.figure_factory import create_table\n\n>>> text = [['Country', 'Year', 'Population'], ...\n\n\n\n\n\n\n\n ['US', 2000, 282200000], ...\n\n\n\n\n\n\n\n ['Canada', 2000, 27790000], ...\n\n\n\n\n\n\n\n ['US', 2010, 309000000], ...\n\n\n\n\n\n\n\n ['Canada', 2010, 34000000]]\n\n>>> table = create_table(text) >>> table.show()\n\nExample 2: Table with Custom Coloring\n\n>>> from plotly.figure_factory import create_table >>> text = [['Country', 'Year', 'Population'], ...\n\n\n\n\n\n\n\n ['US', 2000, 282200000], ...\n\n\n\n\n\n\n\n ['Canada', 2000, 27790000], ...\n\n\n\n\n\n\n\n ['US', 2010, 309000000], ...\n\n\n\n\n\n\n\n ['Canada', 2010, 34000000]] >>> table = create_table(text, ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncolorscale=[[0, '#000000'], ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[.5, '#80beff'], ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1, '#cce5ff']], ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfont_colors=['#ffffff', '#000000', ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n '#000000']) >>> table.show()\n\nExample 3: Simple Plotly Table with Pandas\n\n>>> from plotly.figure_factory import create_table >>> import pandas as pd >>> df = pd.read_csv('http://www.stat.ubc.ca/~jenny/notOcto/STAT545A/examples/gapminder/data/gapminderDataFiveYear.txt', sep='\n\n\n\n\n\n') >>> df_p = df[0:25] >>> table_simple = create_table(df_p) >>> table_simple.show()\n"
}