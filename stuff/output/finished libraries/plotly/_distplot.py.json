{
    "source file": "_distplot.py",
    "line number": "52",
    "func name": "create_distplot",
    "func arg": "(hist_data, group_labels, bin_size, curve_type, colors, rug_text, histnorm, show_hist, show_curve, show_rug)",
    "comments": "Function that creates a distplot similar to seaborn.distplot; **this function is deprecated**, use instead :mod:`plotly.express` functions, for example\n\n>>> import plotly.express as px >>> tips = px.data.tips() >>> fig = px.histogram(tips, x=\"total_bill\", y=\"tip\", color=\"sex\", marginal=\"rug\", ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nhover_data=tips.columns) >>> fig.show()\n\n The distplot can be composed of all or any combination of the following 3 components: (1) histogram, (2) curve: (a) kernel density estimation or (b) normal curve, and (3) rug plot. Additionally, multiple distplots (from multiple datasets) can be created in the same plot.\n\n:param (list[list]) hist_data: Use list of lists to plot multiple data sets on the same plot. :param (list[str]) group_labels: Names for each data set. :param (list[float]|float) bin_size: Size of histogram bins. Default = 1. :param (str) curve_type: 'kde' or 'normal'. Default = 'kde' :param (str) histnorm: 'probability density' or 'probability' Default = 'probability density' :param (bool) show_hist: Add histogram to distplot? Default = True :param (bool) show_curve: Add curve to distplot? Default = True :param (bool) show_rug: Add rug to distplot? Default = True :param (list[str]) colors: Colors for traces. :param (list[list]) rug_text: Hovertext values for rug_plot, :return (dict): Representation of a distplot figure.\n\nExample 1: Simple distplot of 1 data set\n\n>>> from plotly.figure_factory import create_distplot\n\n>>> hist_data = [[1.1, 1.1, 2.5, 3.0, 3.5, ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n 3.5, 4.1, 4.4, 4.5, 4.5, ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n 5.0, 5.0, 5.2, 5.5, 5.5, ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n 5.5, 5.5, 5.5, 6.1, 7.0]] >>> group_labels = ['distplot example'] >>> fig = create_distplot(hist_data, group_labels) >>> fig.show()\n\n Example 2: Two data sets and added rug text\n\n>>> from plotly.figure_factory import create_distplot >>> # Add histogram data >>> hist1_x = [0.8, 1.2, 0.2, 0.6, 1.6, ...\n\n\n\n\n\n\n\n\n\n\n\n-0.9, -0.07, 1.95, 0.9, -0.2, ...\n\n\n\n\n\n\n\n\n\n\n\n-0.5, 0.3, 0.4, -0.37, 0.6] >>> hist2_x = [0.8, 1.5, 1.5, 0.6, 0.59, ...\n\n\n\n\n\n\n\n\n\n\n\n1.0, 0.8, 1.7, 0.5, 0.8, ...\n\n\n\n\n\n\n\n\n\n\n\n-0.3, 1.2, 0.56, 0.3, 2.2]\n\n>>> # Group data together >>> hist_data = [hist1_x, hist2_x]\n\n>>> group_labels = ['2012', '2013']\n\n>>> # Add text >>> rug_text_1 = ['a1', 'b1', 'c1', 'd1', 'e1', ...\n\n\n\n\n\n 'f1', 'g1', 'h1', 'i1', 'j1', ...\n\n\n\n\n\n 'k1', 'l1', 'm1', 'n1', 'o1']\n\n>>> rug_text_2 = ['a2', 'b2', 'c2', 'd2', 'e2', ...\n\n\n\n\n\n 'f2', 'g2', 'h2', 'i2', 'j2', ...\n\n\n\n\n\n 'k2', 'l2', 'm2', 'n2', 'o2']\n\n>>> # Group text together >>> rug_text_all = [rug_text_1, rug_text_2]\n\n>>> # Create distplot >>> fig = create_distplot( ...\n\n\n\n hist_data, group_labels, rug_text=rug_text_all, bin_size=.2)\n\n>>> # Add title >>> fig.update_layout(title='Dist Plot') # doctest: +SKIP >>> fig.show()\n\n Example 3: Plot with normal curve and hide rug plot\n\n>>> from plotly.figure_factory import create_distplot >>> import numpy as np\n\n>>> x1 = np.random.randn(190) >>> x2 = np.random.randn(200)+1 >>> x3 = np.random.randn(200)-1 >>> x4 = np.random.randn(210)+2\n\n>>> hist_data = [x1, x2, x3, x4] >>> group_labels = ['2012', '2013', '2014', '2015']\n\n>>> fig = create_distplot( ...\n\n\n\n hist_data, group_labels, curve_type='normal', ...\n\n\n\n show_rug=False, bin_size=.4)\n\n Example 4: Distplot with Pandas\n\n>>> from plotly.figure_factory import create_distplot >>> import numpy as np >>> import pandas as pd\n\n>>> df = pd.DataFrame({'2012': np.random.randn(200), ...\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n'2013': np.random.randn(200)+1}) >>> fig = create_distplot([df[c] for c in df.columns], df.columns) >>> fig.show()\n"
}