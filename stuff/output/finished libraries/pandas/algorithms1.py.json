{
    "source file": "algorithms1.py",
    "line number": "1940",
    "func name": "safe_sort",
    "func arg": "(values, codes, na_sentinel, assume_unique, verify)",
    "comments": "Sort ``values`` and reorder corresponding ``codes``.\n\n``values`` should be unique if ``codes`` is not None. Safe for use with mixed types (int, str), orders ints before strs.\n\nParameters ---------- values : list-like Sequence; must be unique if ``codes`` is not None. codes : list_like, optional Indices to ``values``. All out of bound indices are treated as \"not found\" and will be masked with ``na_sentinel``. na_sentinel : int, default -1 Value in ``codes`` to mark \"not found\". Ignored when ``codes`` is None. assume_unique : bool, default False When True, ``values`` are assumed to be unique, which can speed up the calculation. Ignored when ``codes`` is None. verify : bool, default True Check if codes are out of bound for the values and put out of bound codes equal to na_sentinel. If ``verify=False``, it is assumed there are no out of bound codes. Ignored when ``codes`` is None.\n\n.. versionadded:: 0.25.0\n##### Returns\n* **ordered **: ndarray\n    Sorted ``values``\n\n* **new_codes **: ndarray\n    Reordered ``codes``; returned when ``codes`` is not None.\n\n"
}