{
    "source file": "meteor_score.py",
    "line number": "360",
    "func name": "meteor_score",
    "func arg": "(references, hypothesis, preprocess, stemmer, wordnet, alpha, beta, gamma)",
    "comments": "Calculates METEOR score for hypothesis with multiple references as described in \"Meteor: An Automatic Metric for MT Evaluation with HighLevels of Correlation with Human Judgments\" by Alon Lavie and Abhaya Agarwal, in Proceedings of ACL. http://www.cs.cmu.edu/~alavie/METEOR/pdf/Lavie-Agarwal-2007-METEOR.pdf\n\nIn case of multiple references the best score is chosen. This method iterates over single_meteor_score and picks the best pair among all the references for a given hypothesis\n\n>>> hypothesis1 = 'It is a guide to action which ensures that the military always obeys the commands of the party' >>> hypothesis2 = 'It is to insure the troops forever hearing the activity guidebook that party direct'\n\n>>> reference1 = 'It is a guide to action that ensures that the military will forever heed Party commands' >>> reference2 = 'It is the guiding principle which guarantees the military forces always being under the command of the Party' >>> reference3 = 'It is the practical guide for the army always to heed the directions of the party'\n\n>>> round(meteor_score([reference1, reference2, reference3], hypothesis1),4) 0.7398\n\nIf there is no words match during the alignment the method returns the score as 0. We can safely\n\nreturn a zero instead of raising a division by zero error as no match usually implies a bad translation.\n\n>>> round(meteor_score(['this is a cat'], 'non matching hypothesis'),4) 0.0\n\n:param references: reference sentences :type references: list(str) :param hypothesis: a hypothesis sentence :type hypothesis: str :param preprocess: preprocessing function (default str.lower) :type preprocess: method :param stemmer: nltk.stem.api.StemmerI object (default PorterStemmer()) :type stemmer: nltk.stem.api.StemmerI or any class that implements a stem method :param wordnet: a wordnet corpus reader object (default nltk.corpus.wordnet) :type wordnet: WordNetCorpusReader :param alpha: parameter for controlling relative weights of precision and recall. :type alpha: float :param beta: parameter for controlling shape of penalty as a function of as a function of fragmentation. :type beta: float :param gamma: relative weight assigned to fragmentation penality. :type gamma: float :return: The sentence-level METEOR score. :rtype: float\n"
}