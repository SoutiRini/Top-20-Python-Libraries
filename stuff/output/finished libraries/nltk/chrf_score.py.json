{
    "source file": "chrf_score.py",
    "line number": "155",
    "func name": "corpus_chrf",
    "func arg": "(references, hypotheses, min_len, max_len, beta, ignore_whitespace)",
    "comments": "Calculates the corpus level CHRF (Character n-gram F-score), it is the macro-averaged value of the sentence/segment level CHRF score.\n\nThis implementation of CHRF only supports a single reference at the moment.\n\n>>> ref1 = str('It is a guide to action that ensures that the military ' ...\n\n\n\n\n\n\n\n\n\n\n\n'will forever heed Party commands').split() >>> ref2 = str('It is the guiding principle which guarantees the military ' ...\n\n\n\n\n\n\n\n\n\n\n\n'forces always being under the command of the Party').split() >>> >>> hyp1 = str('It is a guide to action which ensures that the military ' ...\n\n\n\n\n\n\n\n\n\n\n\n'always obeys the commands of the party').split() >>> hyp2 = str('It is to insure the troops forever hearing the activity ' ...\n\n\n\n\n\n\n\n\n\n\n\n'guidebook that party direct') >>> corpus_chrf([ref1, ref2, ref1, ref2], [hyp1, hyp2, hyp2, hyp1]) # doctest: +ELLIPSIS 0.3910...\n\n:param references: a corpus of list of reference sentences, w.r.t. hypotheses :type references: list(list(str)) :param hypotheses: a list of hypothesis sentences :type hypotheses: list(list(str)) :param min_len: The minimum order of n-gram this function should extract. :type min_len: int :param max_len: The maximum order of n-gram this function should extract. :type max_len: int :param beta: the parameter to assign more importance to recall over precision :type beta: float :param ignore_whitespace: ignore whitespace characters in scoring :type ignore_whitespace: bool :return: the sentence level CHRF score. :rtype: float\n"
}