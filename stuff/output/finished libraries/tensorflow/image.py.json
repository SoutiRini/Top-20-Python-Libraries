{
    "source file": "image.py",
    "line number": "266",
    "func name": "load_img",
    "func arg": "(path, grayscale, color_mode, target_size, interpolation)",
    "comments": "Loads an image into PIL format.\n\nUsage:\n\n``` image = tf.keras.preprocessing.image.load_img(image_path) input_arr = keras.preprocessing.image.img_to_array(image) input_arr = np.array([input_arr])\n\n# Convert single image to a batch. predictions = model.predict(input_arr) ```\n\nArguments: path: Path to image file. grayscale: DEPRECATED use `color_mode=\"grayscale\"`. color_mode: One of \"grayscale\", \"rgb\", \"rgba\". Default: \"rgb\". The desired image format. target_size: Either `None` (default to original size) or tuple of ints `(img_height, img_width)`. interpolation: Interpolation method used to resample the image if the target size is different from that of the loaded image. Supported methods are \"nearest\", \"bilinear\", and \"bicubic\". If PIL version 1.1.3 or newer is installed, \"lanczos\" is also supported. If PIL version 3.4.0 or newer is installed, \"box\" and \"hamming\" are also supported. By default, \"nearest\" is used.\n##### Returns\n"
}