{
    "source file": "candidate_sampling_ops.py",
    "line number": "350",
    "func name": "compute_accidental_hits",
    "func arg": "(true_classes, sampled_candidates, num_true, seed, name)",
    "comments": "Compute the position ids in `sampled_candidates` matching `true_classes`.\n\nIn Candidate Sampling, this operation facilitates virtually removing sampled classes which happen to match target classes.\n\nThis is done in Sampled Softmax and Sampled Logistic.\n\nSee our [Candidate Sampling Algorithms Reference](http://www.tensorflow.org/extras/candidate_sampling.pdf).\n\nWe presuppose that the `sampled_candidates` are unique.\n\nWe call it an 'accidental hit' when one of the target classes matches one of the sampled classes.\n\nThis operation reports accidental hits as triples `(index, id, weight)`, where `index` represents the row number in `true_classes`, `id` represents the position in `sampled_candidates`, and weight is `-FLOAT_MAX`.\n\nThe result of this op should be passed through a `sparse_to_dense` operation, then added to the logits of the sampled classes. This removes the contradictory effect of accidentally sampling the true target classes as noise classes for the same example.\n##### Args\n* **true_classes**: A `Tensor` of type `int64` and shape `[batch_size,\n  num_true]`. The target classes.\n\n* **sampled_candidates**: A tensor of type `int64` and shape `[num_sampled]`.\n  The sampled_candidates output of CandidateSampler.\n\n* **num_true**: An `int`.  The number of target classes per training example.\n\n* **seed**: An `int`. An operation-specific seed. Default is 0.\n\n* **name**: A name for the operation (optional).\n\n##### Returns\n* **indices**: A `Tensor` of type `int32` and shape `[num_accidental_hits]`.\n  Values indicate rows in `true_classes`.\n\n* **ids**: A `Tensor` of type `int64` and shape `[num_accidental_hits]`.\n  Values indicate positions in `sampled_candidates`.\n\n* **weights**: A `Tensor` of type `float` and shape `[num_accidental_hits]`.\n  Each value is `-FLOAT_MAX`.\n\n"
}