{
    "source file": "mel_ops.py",
    "line number": "95",
    "func name": "linear_to_mel_weight_matrix",
    "func arg": "(num_mel_bins, num_spectrogram_bins, sample_rate, lower_edge_hertz, upper_edge_hertz, dtype, name)",
    "comments": "Returns a matrix to warp linear scale spectrograms to the [mel scale][mel].\n\n\n##### Args\n* **num_mel_bins**: Python int. How many bands in the resulting mel spectrum.\n\n* **num_spectrogram_bins**: An integer `Tensor`. How many bins there are in the\n  source spectrogram data, which is understood to be `fft_size // 2 + 1`,\n  i.e. the spectrogram only contains the nonredundant FFT bins.\n\n* **sample_rate**: An integer or float `Tensor`. Samples per second of the input\n  signal used to create the spectrogram. Used to figure out the frequencies\n  corresponding to each spectrogram bin, which dictates how they are mapped\n  into the mel scale.\n\n* **lower_edge_hertz**: Python float. Lower bound on the frequencies to be\n  included in the mel spectrum. This corresponds to the lower edge of the\n  lowest triangular band.\n\n* **upper_edge_hertz**: Python float. The desired top edge of the highest\n  frequency band.\n\n* **dtype**: The `DType` of the result matrix. Must be a floating point type.\n\n* **name**: An optional name for the operation.\n\n##### Returns\n"
}