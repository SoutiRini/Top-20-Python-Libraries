{
    "source file": "compat.py",
    "line number": "131",
    "func name": "forward_compatibility_horizon",
    "func arg": "(year, month, day)",
    "comments": "Context manager for testing forward compatibility of generated graphs.\n\nSee [Version compatibility](https://tensorflow.org/guide/version_compat#backward_forward).\n\nTo ensure forward compatibility of generated graphs (see `forward_compatible`) with older binaries, new features can be gated with:\n\n```python if compat.forward_compatible(year=2018, month=08, date=01): generate_graph_with_new_features() else: generate_graph_so_older_binaries_can_consume_it() ```\n\nHowever, when adding new features, one may want to unittest it before the forward compatibility window expires. This context manager enables such tests. For example:\n\n```python from tensorflow.python.compat import compat\n\ndef testMyNewFeature(self): with compat.forward_compatibility_horizon(2018, 08, 02): # Test that generate_graph_with_new_features() has an effect ```\n##### Args\n* **year**: A year (e.g., 2018). Must be an `int`.\n\n* **month**: A month (1 <= month <= 12) in year. Must be an `int`.\n\n* **day**: A day (1 <= day <= 31, or 30, or 29, or 28) in month. Must be an\n  `int`.\n\n* **elds**: \n\n"
}