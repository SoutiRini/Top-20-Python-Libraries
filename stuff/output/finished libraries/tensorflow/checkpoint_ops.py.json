{
    "source file": "checkpoint_ops.py",
    "line number": "419",
    "func name": "_load_embedding_initializer",
    "func arg": "(ckpt_path, embedding_tensor_name, new_vocab_size, embedding_dim, old_vocab_file, new_vocab_file, old_vocab_size, num_oov_buckets, initializer, max_rows_in_memory)",
    "comments": "Returns a variable initializer for loading pre-trained embeddings.\n\nWrapper around `load_and_remap_matrix_initializer()` specialized for loading embedding weights and remapping according to the provided vocab files. See docs for `load_and_remap_matrix_initializer()` for more details.\n\nNOTE: Only for use with div-partitioned variables / vocabularies.\n##### Args\n* **ckpt_path**: Path to the TensorFlow checkpoint (version 2, `TensorBundle`)\n  from which the old matrix `Tensor` will be loaded.\n\n* **embedding_tensor_name**: Name of the 2-D `Tensor` to load from checkpoint.\n\n* **new_vocab_size**: Number of entries in the new vocab.\n\n* **embedding_dim**: `int` specifying the dimension of the embedding vectors from\n  the checkpoint. Must match the number of columns in the old embedding\n  matrix.\n\n* **old_vocab_file**: A scalar `Tensor` of type `string` containing the\n  path to the old vocabulary file.\n\n* **new_vocab_file**: A scalar `Tensor` of type `string` containing the\n  path to the new vocabulary file.\n\n* **old_vocab_size**: The number of entries to consider in the old vocabulary.\n  With the default value of -1, the entire old row vocabulary file will be\n  used.  Otherwise, only the first `old_vocab_size` entries will be\n  considered for remapping.Must be smaller than the length of\n  `old_row_vocab_file`.\n\n* **num_oov_buckets**: `int` specifying the number of out-of-vocabulary\n  buckets to use. Must be >= 0.\n\n* **initializer**: Initializer function that accepts a 1-D tensor as the arg to\n  specify the shape of the returned tensor. If `None`, defaults to using\n  `truncated_normal_initializer()`.\n\n* **max_rows_in_memory**: `int` specifying the maximum number of rows to load from\n  the checkpoint at once. If less than or equal to 0, the entire matrix will\n  be loaded into memory. Setting this arg trades increased disk reads for\n  lower memory usage.\n\n##### Returns\n"
}