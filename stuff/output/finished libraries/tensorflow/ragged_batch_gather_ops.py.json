{
    "source file": "ragged_batch_gather_ops.py",
    "line number": "27",
    "func name": "batch_gather",
    "func arg": "(params, indices, name)",
    "comments": "Gathers slices from `params` according to `indices` with batch dims.\n\nThis operation is similar to `gather`, but it assumes that the leading `N` dimensions of `indices` and `params` are batch dimensions, and performs a gather within each batch.\n\nIn particular, when using this operation with `N` batch dimensions `B1...BN`:\n\n* `indices` has shape `[B1...BN, I]` * `params` has shape `[B1...BN, P1...PM]`. * `result` has shape `[B1...BN, I, P2...PM]`. * `result[b1...bN, i, p2...pM] = params[b1...bN, indices[b1...bN, i], p2...pM]`\n##### Args\n* **params**: A potentially ragged tensor with shape `[B1...BN, P1...PM]` (`N>=0`,\n  `M>0`).\n\n* **indices**: A potentially ragged tensor with shape `[B1...BN, I]` (`N>=0`).\n\n* **name**: A name for the operation (optional).\n\n##### Returns\n* **## Example**: \n\n"
}