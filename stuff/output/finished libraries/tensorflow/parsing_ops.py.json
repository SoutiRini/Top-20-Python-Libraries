{
    "source file": "parsing_ops.py",
    "line number": "110",
    "func name": "parse_example_dataset",
    "func arg": "(features, num_parallel_calls, deterministic)",
    "comments": "A transformation that parses `Example` protos into a `dict` of tensors.\n\nParses a number of serialized `Example` protos given in `serialized`. We refer to `serialized` as a batch with `batch_size` many entries of individual `Example` protos.\n\nThis op parses serialized examples into a dictionary mapping keys to `Tensor`, `SparseTensor`, and `RaggedTensor` objects. `features` is a dict from keys to `VarLenFeature`, `RaggedFeature`, `SparseFeature`, and `FixedLenFeature` objects. Each `VarLenFeature` and `SparseFeature` is mapped to a `SparseTensor`; each `RaggedFeature` is mapped to a `RaggedTensor`; and each `FixedLenFeature` is mapped to a `Tensor`. See `tf.io.parse_example` for more details about feature dictionaries.\n##### Args\n* **features**: A `dict` mapping feature keys to `FixedLenFeature`,\n  `VarLenFeature`, `RaggedFeature`, and `SparseFeature` values.\n\n* **num_parallel_calls**: (Optional.) A `tf.int32` scalar `tf.Tensor`,\n   representing the number of parsing processes to call in parallel.\n\n* **deterministic**: (Optional.) A boolean controlling whether determinism\n   should be traded for performance by allowing elements to be produced out\n   of order if some parsing calls complete faster than others. If\n   `deterministic` is `None`, the\n   `tf.data.Options.experimental_deterministic` dataset option (`True` by\n   default) is used to decide whether to produce elements\n   deterministically.\n\n##### Returns\n"
}