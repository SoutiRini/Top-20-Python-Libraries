{
    "source file": "simple_save.py",
    "line number": "35",
    "func name": "simple_save",
    "func arg": "(session, export_dir, inputs, outputs, legacy_init_op)",
    "comments": "Convenience function to build a SavedModel suitable for serving.\n\nIn many common cases, saving models for serving will be as simple as:\n\nsimple_save(session, export_dir, inputs={\"x\": x, \"y\": y}, outputs={\"z\": z})\n\nAlthough in many cases it's not necessary to understand all of the many ways to configure a SavedModel, this method has a few practical implications:\n\n- It will be treated as a graph for inference / serving (i.e. uses the tag `saved_model.SERVING`)\n\n- The SavedModel will load in TensorFlow Serving and supports the [Predict API](https://github.com/tensorflow/serving/blob/master/tensorflow_serving/apis/predict.proto). To use the Classify, Regress, or MultiInference APIs, please use either [tf.Estimator](https://www.tensorflow.org/api_docs/python/tf/estimator/Estimator) or the lower level [SavedModel APIs](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md).\n\n- Some TensorFlow ops depend on information on disk or other information called \"assets\". These are generally handled automatically by adding the assets to the `GraphKeys.ASSET_FILEPATHS` collection. Only assets in that collection are exported; if you need more custom behavior, you'll need to use the [SavedModelBuilder](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/builder.py).\n\nMore information about SavedModel and signatures can be found here: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/python/saved_model/README.md.\n##### Args\n* **session**: The TensorFlow session from which to save the meta graph and\n    variables.\n\n* **export_dir**: The path to which the SavedModel will be stored.\n\n* **inputs**: dict mapping string input names to tensors. These are added\n    to the SignatureDef as the inputs.\n\n* **outputs**: dict mapping string output names to tensors. These are added\n    to the SignatureDef as the outputs.\n\n* **legacy_init_op**: Legacy support for op or group of ops to execute after the\n    restore op upon a load.\n\n"
}