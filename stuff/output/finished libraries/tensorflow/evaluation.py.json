{
    "source file": "evaluation.py",
    "line number": "172",
    "func name": "_evaluate_once",
    "func arg": "(checkpoint_path, master, scaffold, eval_ops, feed_dict, final_ops, final_ops_feed_dict, hooks, config)",
    "comments": "Evaluates the model at the given checkpoint path.\n\nDuring a single evaluation, the `eval_ops` is run until the session is interrupted or requested to finish. This is typically requested via a `tf.contrib.training.StopAfterNEvalsHook` which results in `eval_ops` running the requested number of times.\n\nOptionally, a user can pass in `final_ops`, a single `Tensor`, a list of `Tensors` or a dictionary from names to `Tensors`. The `final_ops` is evaluated a single time after `eval_ops` has finished running and the fetched values of `final_ops` are returned. If `final_ops` is left as `None`, then `None` is returned.\n\nOne may also consider using a `tf.contrib.training.SummaryAtEndHook` to record summaries after the `eval_ops` have run. If `eval_ops` is `None`, the summaries run immediately after the model checkpoint has been restored.\n\nNote that `evaluate_once` creates a local variable used to track the number of evaluations run via `tf.contrib.training.get_or_create_eval_step`. Consequently, if a custom local init op is provided via a `scaffold`, the caller should ensure that the local init op also initializes the eval step.\n##### Args\n* **checkpoint_path**: The path to a checkpoint to use for evaluation.\n\n* **master**: The BNS address of the TensorFlow master.\n\n* **scaffold**: An tf.compat.v1.train.Scaffold instance for initializing variables\n  and restoring variables. Note that `scaffold.init_fn` is used by the\n  function to restore the checkpoint. If you supply a custom init_fn, then\n  it must also take care of restoring the model from its checkpoint.\n\n* **eval_ops**: A single `Tensor`, a list of `Tensors` or a dictionary of names to\n  `Tensors`, which is run until the session is requested to stop, commonly\n  done by a `tf.contrib.training.StopAfterNEvalsHook`.\n\n* **feed_dict**: The feed dictionary to use when executing the `eval_ops`.\n\n* **final_ops**: A single `Tensor`, a list of `Tensors` or a dictionary of names\n  to `Tensors`.\n\n* **final_ops_feed_dict**: A feed dictionary to use when evaluating `final_ops`.\n\n* **hooks**: List of `tf.estimator.SessionRunHook` callbacks which are run inside\n  the evaluation loop.\n\n* **config**: An instance of `tf.compat.v1.ConfigProto` that will be used to\n  configure the `Session`. If left as `None`, the default will be used.\n\n##### Returns\n"
}