{
    "source file": "subscribe.py",
    "line number": "313",
    "func name": "subscribe",
    "func arg": "(tensors, side_effects)",
    "comments": "Subscribe to a tensor.\n\nThis method will attach side effect graphs to a given set of tensors. Set of tensors follows from session.run and supports single `Tensor`, `list`, nested `list`, `tuple`, `namedtuple`, or `dict`. It returns the tensors in the same passed in structure, but as clones with side effects applied. The supplied side effect graphs are specified as a constructor function which takes the target tensor and constructs a side effect graph and returns a list of ops that should be control dependencies on fetching the tensor. It will append 'subscription' to the name scope of the tensor for every node in the side effect graph. These control dependencies are what trigger the side effects. Subscribe will construct the additions to your graph and return the created identity tensor downstream of the control dependencies. Use these tensors as you would normally in the rest of your tensorflow code. If a given tensor has already been subscribed or a tensor returned by a call to subscribe is passed, the previously created identity tensor will be reused and the side effect graphs will be added to the existing ones.\n##### Args\n* **tensors**: `Tensor` or set of tensors to subscribe to. Set of tensors format\n  follows from `Session.run` and supports single `Tensor`, `list`, nested\n  `list`, `tuple`, `namedtuple`, or `dict`.\n\n* **side_effects**: Function(s) that takes a `Tensor`, construct a subgraph, and\n  return a nonempty list of control dependencies. This can be a single\n  function or list of functions.\n\n##### Returns\n"
}