{
    "source file": "helper.py",
    "line number": "174",
    "func name": "rfftfreq",
    "func arg": "(n, d)",
    "comments": "Return the Discrete Fourier Transform sample frequencies (for usage with rfft, irfft).\n\nThe returned float array `f` contains the frequency bin centers in cycles per unit of the sample spacing (with zero at the start).\n\nFor instance, if the sample spacing is in seconds, then the frequency unit is cycles/second.\n\nGiven a window length `n` and a sample spacing `d`::\n\nf = [0, 1, ...,\n\n\n\n n/2-1,\n\n\n\n n/2] / (d*n)\n\n if n is even f = [0, 1, ..., (n-1)/2-1, (n-1)/2] / (d*n)\n\n if n is odd\n\nUnlike `fftfreq` (but like `scipy.fftpack.rfftfreq`) the Nyquist frequency component is considered to be positive.\n\nParameters ---------- n : int Window length. d : scalar, optional Sample spacing (inverse of the sampling rate). Defaults to 1.\n##### Returns\n* **f **: ndarray\n    Array of length ``n//2 + 1`` containing the sample frequencies.\n\n"
}