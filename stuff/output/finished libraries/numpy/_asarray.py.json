{
    "source file": "_asarray.py",
    "line number": "229",
    "func name": "require",
    "func arg": "(a, dtype, requirements)",
    "comments": "Return an ndarray of the provided type that satisfies requirements.\n\nThis function is useful to be sure that an array with the correct flags is returned for passing to compiled code (perhaps through ctypes).\n\nParameters ---------- a : array_like The object to be converted to a type-and-requirement-satisfying array. dtype : data-type The required data-type. If None preserve the current dtype. If your application requires the data to be in native byteorder, include a byteorder specification as a part of the dtype specification. requirements : str or list of str The requirements list can be any of the following\n\n* 'F_CONTIGUOUS' ('F')\n\n- ensure a Fortran-contiguous array * 'C_CONTIGUOUS' ('C')\n\n- ensure a C-contiguous array * 'ALIGNED' ('A')\n\n\n\n\n\n- ensure a data-type aligned array * 'WRITEABLE' ('W')\n\n\n\n- ensure a writable array * 'OWNDATA' ('O')\n\n\n\n\n\n- ensure an array that owns its own data * 'ENSUREARRAY', ('E')\n\n- ensure a base array, instead of a subclass\n##### Returns\n* **out **: ndarray\n    Array with specified requirements and type if given.\n\n* **asarray **: Convert input to an ndarray.\n\n* **asanyarray **: Convert to an ndarray, but pass through ndarray subclasses.\n\n* **ascontiguousarray **: Convert input to a contiguous array.\n\n* **asfortranarray **: Convert input to an ndarray with column-major\n                 memory order.\n\n* **ndarray.flags **: Information about the memory layout of the array.\n\n* **>>> x.flags\n  C_CONTIGUOUS **: True\n  F_CONTIGUOUS\n\n* **>>> y.flags\n  C_CONTIGUOUS **: False\n  F_CONTIGUOUS\n\n"
}