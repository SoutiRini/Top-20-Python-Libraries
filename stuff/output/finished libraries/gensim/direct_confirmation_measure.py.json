{
    "source file": "direct_confirmation_measure.py",
    "line number": "128",
    "func name": "log_ratio_measure",
    "func arg": "(segmented_topics, accumulator, normalize, with_std, with_support)",
    "comments": "Compute log ratio measure for `segment_topics`.\n\nParameters ---------- segmented_topics : list of lists of (int, int) Output from the :func:`~gensim.topic_coherence.segmentation.s_one_pre`, :func:`~gensim.topic_coherence.segmentation.s_one_one`. accumulator : :class:`~gensim.topic_coherence.text_analysis.InvertedIndexAccumulator` Word occurrence accumulator from :mod:`gensim.topic_coherence.probability_estimation`. normalize : bool, optional Details in the \"Notes\" section. with_std : bool, optional True to also include standard deviation across topic segment sets in addition to the mean coherence for each topic. with_support : bool, optional True to also include support across topic segments. The support is defined as the number of pairwise similarity comparisons were used to compute the overall topic coherence.\n\nNotes ----- If `normalize=False`: Calculate the log-ratio-measure, popularly known as **PMI** which is used by coherence measures such as `c_v`. This is defined as :math:`m_{lr}(S_i) = log \\frac{P(W', W^{*}) + \\epsilon}{P(W') * P(W^{*})}`\n\nIf `normalize=True`: Calculate the normalized-log-ratio-measure, popularly knowns as **NPMI** which is used by coherence measures such as `c_v`. This is defined as :math:`m_{nlr}(S_i) = \\frac{m_{lr}(S_i)}{-log(P(W', W^{*}) + \\epsilon)}`\n##### Returns\n* **.. sourcecode**: \n\n"
}