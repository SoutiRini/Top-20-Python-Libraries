{
    "source file": "_spectral.py",
    "line number": "161",
    "func name": "spectral_clustering",
    "func arg": "(affinity)",
    "comments": "Apply clustering to a projection of the normalized Laplacian.\n\nIn practice Spectral Clustering is very useful when the structure of the individual clusters is highly non-convex or more generally when a measure of the center and spread of the cluster is not a suitable description of the complete cluster. For instance, when clusters are nested circles on the 2D plane.\n\nIf affinity is the adjacency matrix of a graph, this method can be used to find normalized graph cuts.\n\nRead more in the :ref:`User Guide <spectral_clustering>`.\n\nParameters ---------- affinity : {array-like, sparse matrix} of shape (n_samples, n_samples) The affinity matrix describing the relationship of the samples to embed. **Must be symmetric**.\n\nPossible examples:\n\n- adjacency matrix of a graph,\n\n- heat kernel of the pairwise distance matrix of the samples,\n\n- symmetric k-nearest neighbours connectivity matrix of the samples.\n\nn_clusters : int, default=None Number of clusters to extract.\n\nn_components : int, default=n_clusters Number of eigen vectors to use for the spectral embedding\n\neigen_solver : {None, 'arpack', 'lobpcg', or 'amg'} The eigenvalue decomposition strategy to use. AMG requires pyamg to be installed. It can be faster on very large, sparse problems, but may also lead to instabilities. If None, then ``'arpack'`` is used.\n\nrandom_state : int, RandomState instance, default=None A pseudo random number generator used for the initialization of the lobpcg eigen vectors decomposition when eigen_solver == 'amg' and by the K-Means initialization. Use an int to make the randomness deterministic. See :term:`Glossary <random_state>`.\n\nn_init : int, default=10 Number of time the k-means algorithm will be run with different centroid seeds. The final results will be the best output of n_init consecutive runs in terms of inertia.\n\neigen_tol : float, default=0.0 Stopping criterion for eigendecomposition of the Laplacian matrix when using arpack eigen_solver.\n\nassign_labels : {'kmeans', 'discretize'}, default='kmeans' The strategy to use to assign labels in the embedding space.\n\nThere are two ways to assign labels after the laplacian embedding.\n\nk-means can be applied and is a popular choice. But it can also be sensitive to initialization. Discretization is another approach which is less sensitive to random initialization. See the 'Multiclass spectral clustering' paper referenced below for more details on the discretization approach.\n##### Returns\n* **labels **: array of integers, shape\n\n* **- Normalized cuts and image segmentation, 2000\n  Jianbo Shi, Jitendra Malik\n  http**: //citeseer.ist.psu.edu/viewdoc/summary?doi=10.1.1.160.2324\n\n* **- A Tutorial on Spectral Clustering, 2007\n  Ulrike von Luxburg\n  http**: //citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.165.9323\n\n* **- Multiclass spectral clustering, 2003\n  Stella X. Yu, Jianbo Shi\n  https**: //www1.icsi.berkeley.edu/~stellayu/publication/doc/2003kwayICCV.pdf\n\n* **This algorithm solves the normalized cut for k=2**: it is a\n\n"
}