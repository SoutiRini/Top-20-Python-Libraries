{
    "source file": "_twenty_newsgroups.py",
    "line number": "328",
    "func name": "fetch_20newsgroups_vectorized",
    "func arg": "()",
    "comments": "Load the 20 newsgroups dataset and vectorize it into token counts (classification).\n\nDownload it if necessary.\n\nThis is a convenience function; the transformation is done using the default settings for :class:`~sklearn.feature_extraction.text.CountVectorizer`. For more advanced usage (stopword filtering, n-gram extraction, etc.), combine fetch_20newsgroups with a custom :class:`~sklearn.feature_extraction.text.CountVectorizer`, :class:`~sklearn.feature_extraction.text.HashingVectorizer`, :class:`~sklearn.feature_extraction.text.TfidfTransformer` or :class:`~sklearn.feature_extraction.text.TfidfVectorizer`.\n\nThe resulting counts are normalized using :func:`sklearn.preprocessing.normalize` unless normalize is set to False.\n\n=================\n\n ========== Classes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 20 Samples total\n\n\n\n\n\n\n\n\n\n\n\n18846 Dimensionality\n\n\n\n\n\n\n\n\n\n130107 Features\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreal =================\n\n ==========\n\nRead more in the :ref:`User Guide <20newsgroups_dataset>`.\n\nParameters ---------- subset : {'train', 'test', 'all'}, default='train' Select the dataset to load: 'train' for the training set, 'test' for the test set, 'all' for both, with shuffled ordering.\n\nremove : tuple, default=() May contain any subset of ('headers', 'footers', 'quotes'). Each of these are kinds of text that will be detected and removed from the newsgroup posts, preventing classifiers from overfitting on metadata.\n\n'headers' removes newsgroup headers, 'footers' removes blocks at the ends of posts that look like signatures, and 'quotes' removes lines that appear to be quoting another post.\n\ndata_home : str, default=None Specify an download and cache folder for the datasets. If None, all scikit-learn data is stored in '~/scikit_learn_data' subfolders.\n\ndownload_if_missing : bool, default=True If False, raise an IOError if the data is not locally available instead of trying to download the data from the source site.\n\nreturn_X_y : bool, default=False If True, returns ``(data.data, data.target)`` instead of a Bunch object.\n\n.. versionadded:: 0.20\n\nnormalize : bool, default=True If True, normalizes each document's feature vector to unit norm using :func:`sklearn.preprocessing.normalize`.\n\n.. versionadded:: 0.22\n##### Returns\n* **bunch **: \n\n* **(data, target) **: tuple if ``return_X_y`` is True\n    .. versionadded\n\n"
}