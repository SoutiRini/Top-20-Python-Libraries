{
    "source file": "multiclass2.py",
    "line number": "407",
    "func name": "_ovr_decision_function",
    "func arg": "(predictions, confidences, n_classes)",
    "comments": "Compute a continuous, tie-breaking OvR decision function from OvO.\n\nIt is important to include a continuous value, not only votes, to make computing AUC or calibration meaningful.\n\nParameters ---------- predictions : array-like, shape (n_samples, n_classifiers) Predicted classes for each binary classifier.\n\nconfidences : array-like, shape (n_samples, n_classifiers) Decision functions or predicted probabilities for positive class for each binary classifier.\n\nn_classes : int Number of classes. n_classifiers must be ``n_classes * (n_classes\n\n- 1 ) / 2``\n"
}