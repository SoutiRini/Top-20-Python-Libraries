{
    "source file": "precision_recall_curve.py",
    "line number": "137",
    "func name": "plot_precision_recall_curve",
    "func arg": "(estimator, X, y, **kwargs)",
    "comments": "Plot Precision Recall Curve for binary classifiers.\n\nExtra keyword arguments will be passed to matplotlib's `plot`.\n\nRead more in the :ref:`User Guide <precision_recall_f_measure_metrics>`.\n\nParameters ---------- estimator : estimator instance Fitted classifier or a fitted :class:`~sklearn.pipeline.Pipeline` in which the last estimator is a classifier.\n\nX : {array-like, sparse matrix} of shape (n_samples, n_features) Input values.\n\ny : array-like of shape (n_samples,) Binary target values.\n\nsample_weight : array-like of shape (n_samples,), default=None Sample weights.\n\nresponse_method : {'predict_proba', 'decision_function', 'auto'},\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n default='auto' Specifies whether to use :term:`predict_proba` or :term:`decision_function` as the target response. If set to 'auto', :term:`predict_proba` is tried first and if it does not exist :term:`decision_function` is tried next.\n\nname : str, default=None Name for labeling curve. If `None`, the name of the estimator is used.\n\nax : matplotlib axes, default=None Axes object to plot on. If `None`, a new figure and axes is created.\n\npos_label : str or int, default=None The class considered as the positive class when computing the precision and recall metrics. By default, `estimators.classes_[1]` is considered as the positive class.\n\n.. versionadded:: 0.24\n\n**kwargs : dict Keyword arguments to be passed to matplotlib's `plot`.\n##### Returns\n* **display **: \n\n* **precision_recall_curve **: Compute precision-recall pairs for different probability thresholds\n\n"
}