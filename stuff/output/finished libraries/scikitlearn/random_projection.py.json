{
    "source file": "random_projection.py",
    "line number": "196",
    "func name": "_sparse_random_matrix",
    "func arg": "(n_components, n_features, density, random_state)",
    "comments": "Generalized Achlioptas random sparse matrix for random projection\n\nSetting density to 1 / 3 will yield the original matrix by Dimitris Achlioptas while setting a lower value will yield the generalization by Ping Li et al.\n\nIf we note :math:`s = 1 / density`, the components of the random matrix are drawn from:\n\n- -sqrt(s) / sqrt(n_components)\n\n with probability 1 / 2s -\n\n0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nwith probability 1\n\n- 1 / s\n\n- +sqrt(s) / sqrt(n_components)\n\n with probability 1 / 2s\n\nRead more in the :ref:`User Guide <sparse_random_matrix>`.\n\nParameters ---------- n_components : int, Dimensionality of the target projection space.\n\nn_features : int, Dimensionality of the original source space.\n\ndensity : float or 'auto', default='auto' Ratio of non-zero component in the random projection matrix in the range `(0, 1]`\n\nIf density = 'auto', the value is set to the minimum density as recommended by Ping Li et al.: 1 / sqrt(n_features).\n\nUse density = 1 / 3.0 if you want to reproduce the results from Achlioptas, 2001.\n\nrandom_state : int or RandomState instance, default=None Controls the pseudo random number generator used to generate the matrix at fit time. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.\n##### Returns\n* **components **: array or CSR matrix with shape [n_components, n_features]\n    The generated Gaussian random matrix.\n\n* **.. [1] Ping Li, T. Hastie and K. W. Church, 2006,\n       \"Very Sparse Random Projections\".\n       https**: //web.stanford.edu/~hastie/Papers/Ping/KDD06_rp.pdf\n\n* **.. [2] D. Achlioptas, 2001, \"Database-friendly random projections\",\n       http**: //www.cs.ucsc.edu/~optas/papers/jl.pdf\n\n"
}