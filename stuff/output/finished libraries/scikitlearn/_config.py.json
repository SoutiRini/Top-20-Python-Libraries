{
    "source file": "_config.py",
    "line number": "86",
    "func name": "config_context",
    "func arg": "(**new_config)",
    "comments": "Context manager for global scikit-learn configuration\n\nParameters ---------- assume_finite : bool, optional If True, validation for finiteness will be skipped, saving time, but leading to potential crashes. If False, validation for finiteness will be performed, avoiding error.\n\nGlobal default: False.\n\nworking_memory : int, optional If set, scikit-learn will attempt to limit the size of temporary arrays to this number of MiB (per job when parallelised), often saving both computation time and memory on expensive operations that can be performed in chunks. Global default: 1024.\n\nprint_changed_only : bool, optional If True, only the parameters that were set to non-default values will be printed when printing an estimator. For example, ``print(SVC())`` while True will only print 'SVC()', but would print 'SVC(C=1.0, cache_size=200, ...)' with all the non-changed parameters when False. Default is True.\n\n.. versionchanged:: 0.23 Default changed from False to True.\n\ndisplay : {'text', 'diagram'}, optional If 'diagram', estimators will be displayed as a diagram in a Jupyter lab or notebook context. If 'text', estimators will be displayed as text. Default is 'text'.\n\n.. versionadded:: 0.23\n\nNotes ----- All settings, not just those presently modified, will be returned to their previous values when the context manager is exited. This is not thread-safe.\n\nExamples -------- >>> import sklearn >>> from sklearn.utils.validation import assert_all_finite >>> with sklearn.config_context(assume_finite=True): ...\n\n\n\n assert_all_finite([float('nan')]) >>> with sklearn.config_context(assume_finite=True): ...\n\n\n\n with sklearn.config_context(assume_finite=False): ...\n\n\n\n\n\n\n\n assert_all_finite([float('nan')]) Traceback (most recent call last): ... ValueError: Input contains NaN, ...\n\nSee Also -------- set_config: Set global scikit-learn configuration get_config: Retrieve current values of the global configuration\n"
}