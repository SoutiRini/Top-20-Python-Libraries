{
    "source file": "confusion_matrix.py",
    "line number": "158",
    "func name": "plot_confusion_matrix",
    "func arg": "(estimator, X, y_true)",
    "comments": "Plot Confusion Matrix.\n\nRead more in the :ref:`User Guide <confusion_matrix>`.\n\nParameters ---------- estimator : estimator instance Fitted classifier or a fitted :class:`~sklearn.pipeline.Pipeline` in which the last estimator is a classifier.\n\nX : {array-like, sparse matrix} of shape (n_samples, n_features) Input values.\n\ny : array-like of shape (n_samples,) Target values.\n\nlabels : array-like of shape (n_classes,), default=None List of labels to index the matrix. This may be used to reorder or select a subset of labels. If `None` is given, those that appear at least once in `y_true` or `y_pred` are used in sorted order.\n\nsample_weight : array-like of shape (n_samples,), default=None Sample weights.\n\nnormalize : {'true', 'pred', 'all'}, default=None Normalizes confusion matrix over the true (rows), predicted (columns) conditions or all the population. If None, confusion matrix will not be normalized.\n\ndisplay_labels : array-like of shape (n_classes,), default=None Target names used for plotting. By default, `labels` will be used if it is defined, otherwise the unique labels of `y_true` and `y_pred` will be used.\n\ninclude_values : bool, default=True Includes values in confusion matrix.\n\nxticks_rotation : {'vertical', 'horizontal'} or float,\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n default='horizontal' Rotation of xtick labels.\n\nvalues_format : str, default=None Format specification for values in confusion matrix. If `None`, the format specification is 'd' or '.2g' whichever is shorter.\n\ncmap : str or matplotlib Colormap, default='viridis' Colormap recognized by matplotlib.\n\nax : matplotlib Axes, default=None Axes object to plot on. If `None`, a new figure and axes is created.\n\ncolorbar : bool, default=True Whether or not to add a colorbar to the plot.\n\n.. versionadded:: 0.24\n##### Returns\n* **display **: \n\n* **confusion_matrix **: Compute confusion matrix to evaluate the accuracy of a classification\n\n* **>>> import matplotlib.pyplot as plt  # doctest**: +SKIP\n\n* **>>> plot_confusion_matrix(clf, X_test, y_test)  # doctest**: +SKIP\n\n* **>>> plt.show()  # doctest**: +SKIP\n\n"
}