{
    "source file": "_samples_generator.py",
    "line number": "1676",
    "func name": "make_checkerboard",
    "func arg": "(shape, n_clusters)",
    "comments": "Generate an array with block checkerboard structure for biclustering.\n\nRead more in the :ref:`User Guide <sample_generators>`.\n\nParameters ---------- shape : tuple (n_rows, n_cols) The shape of the result.\n\nn_clusters : int or array-like (n_row_clusters, n_column_clusters) The number of row and column clusters.\n\nnoise : float, default=0.0 The standard deviation of the gaussian noise.\n\nminval : int, default=10 Minimum value of a bicluster.\n\nmaxval : int, default=100 Maximum value of a bicluster.\n\nshuffle : bool, default=True Shuffle the samples.\n\nrandom_state : int or RandomState instance, default=None Determines random number generation for dataset creation. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.\n##### Returns\n* **X **: array of shape `shape`\n    The generated array.\n\n* **rows **: array of shape (n_clusters, X.shape[0],)\n    The indicators for cluster membership of each row.\n\n* **cols **: array of shape (n_clusters, X.shape[1],)\n    The indicators for cluster membership of each column.\n\n* **.. [1] Kluger, Y., Basri, R., Chang, J. T., & Gerstein, M. (2003).\n    Spectral biclustering of microarray data**: coclustering genes\n    and conditions. Genome research, 13(4), 703-716.\n\n"
}