{
    "source file": "_affinity_propagation.py",
    "line number": "34",
    "func name": "affinity_propagation",
    "func arg": "(S)",
    "comments": "Perform Affinity Propagation Clustering of data\n\nRead more in the :ref:`User Guide <affinity_propagation>`.\n\nParameters ----------\n\nS : array-like of shape (n_samples, n_samples) Matrix of similarities between points\n\npreference : array-like of shape (n_samples,) or float, default=None Preferences for each point\n\n- points with larger values of preferences are more likely to be chosen as exemplars. The number of exemplars, i.e. of clusters, is influenced by the input preferences value. If the preferences are not passed as arguments, they will be set to the median of the input similarities (resulting in a moderate number of clusters). For a smaller amount of clusters, this can be set to the minimum value of the similarities.\n\nconvergence_iter : int, default=15 Number of iterations with no change in the number of estimated clusters that stops the convergence.\n\nmax_iter : int, default=200 Maximum number of iterations\n\ndamping : float, default=0.5 Damping factor between 0.5 and 1.\n\ncopy : bool, default=True If copy is False, the affinity matrix is modified inplace by the algorithm, for memory efficiency\n\nverbose : bool, default=False The verbosity level\n\nreturn_n_iter : bool, default=False Whether or not to return the number of iterations.\n\nrandom_state : int or RandomState instance, default=0 Pseudo-random number generator to control the starting state. Use an int for reproducible results across function calls. See the :term:`Glossary <random_state>`.\n\n.. versionadded:: 0.23 this parameter was previously hardcoded as 0.\n##### Returns\n* **cluster_centers_indices **: ndarray of shape (n_clusters,)\n    index of clusters centers\n\n* **labels **: ndarray of shape (n_samples,)\n    cluster labels for each point\n\n* **n_iter **: int\n    number of iterations run. Returned only if `return_n_iter` is\n    set to True.\n\n* **For an example, see **: ref\n\n"
}