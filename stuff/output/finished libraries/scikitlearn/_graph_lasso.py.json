{
    "source file": "_graph_lasso.py",
    "line number": "412",
    "func name": "graphical_lasso_path",
    "func arg": "(X, alphas, cov_init, X_test, mode, tol, enet_tol, max_iter, verbose)",
    "comments": "l1-penalized covariance estimator along a path of decreasing alphas\n\nRead more in the :ref:`User Guide <sparse_inverse_covariance>`.\n\nParameters ---------- X : ndarray of shape (n_samples, n_features) Data from which to compute the covariance estimate.\n\nalphas : array-like of shape (n_alphas,) The list of regularization parameters, decreasing order.\n\ncov_init : array of shape (n_features, n_features), default=None The initial guess for the covariance.\n\nX_test : array of shape (n_test_samples, n_features), default=None Optional test matrix to measure generalisation error.\n\nmode : {'cd', 'lars'}, default='cd' The Lasso solver to use: coordinate descent or LARS. Use LARS for very sparse underlying graphs, where p > n. Elsewhere prefer cd which is more numerically stable.\n\ntol : float, default=1e-4 The tolerance to declare convergence: if the dual gap goes below this value, iterations are stopped. The tolerance must be a positive number.\n\nenet_tol : float, default=1e-4 The tolerance for the elastic net solver used to calculate the descent direction. This parameter controls the accuracy of the search direction for a given column update, not of the overall parameter estimate. Only used for mode='cd'. The tolerance must be a positive number.\n\nmax_iter : int, default=100 The maximum number of iterations. This parameter should be a strictly positive integer.\n\nverbose : int or bool, default=False The higher the verbosity flag, the more information is printed during the fitting.\n##### Returns\n* **covariances_ **: list of shape (n_alphas,) of ndarray of shape             (n_features, n_features)\n    The estimated covariance matrices.\n\n* **precisions_ **: list of shape (n_alphas,) of ndarray of shape             (n_features, n_features)\n    The estimated (sparse) precision matrices.\n\n* **scores_ **: list of shape (n_alphas,), dtype=float\n    The generalisation error (log-likelihood) on the test data.\n    Returned only if test data is passed.\n\n"
}