{
    "source file": "_least_angle.py",
    "line number": "1145",
    "func name": "_lars_path_residues",
    "func arg": "(X_train, y_train, X_test, y_test, Gram, copy, method, verbose, fit_intercept, normalize, max_iter, eps, positive)",
    "comments": "Compute the residues on left-out data for a full LARS path\n\nParameters ----------- X_train : array-like of shape (n_samples, n_features) The data to fit the LARS on\n\ny_train : array-like of shape (n_samples,) The target variable to fit LARS on\n\nX_test : array-like of shape (n_samples, n_features) The data to compute the residues on\n\ny_test : array-like of shape (n_samples,) The target variable to compute the residues on\n\nGram : None, 'auto' or array-like of shape (n_features, n_features),\n\n\n\n\n\n\n\n\n\n\n\n default=None Precomputed Gram matrix (X' * X), if ``'auto'``, the Gram matrix is precomputed from the given X, if there are more samples than features\n\ncopy : bool, default=True Whether X_train, X_test, y_train and y_test should be copied; if False, they may be overwritten.\n\nmethod : {'lar' , 'lasso'}, default='lar' Specifies the returned model. Select ``'lar'`` for Least Angle Regression, ``'lasso'`` for the Lasso.\n\nverbose : bool or int, default=False Sets the amount of verbosity\n\nfit_intercept : bool, default=True whether to calculate the intercept for this model. If set to false, no intercept will be used in calculations (i.e. data is expected to be centered).\n\npositive : bool, default=False Restrict coefficients to be >= 0. Be aware that you might want to remove fit_intercept which is set True by default. See reservations for using this option in combination with method 'lasso' for expected small values of alpha in the doc of LassoLarsCV and LassoLarsIC.\n\nnormalize : bool, default=True This parameter is ignored when ``fit_intercept`` is set to False. If True, the regressors X will be normalized before regression by subtracting the mean and dividing by the l2-norm. If you wish to standardize, please use :class:`~sklearn.preprocessing.StandardScaler` before calling ``fit`` on an estimator with ``normalize=False``.\n\nmax_iter : int, default=500 Maximum number of iterations to perform.\n\neps : float, optional The machine-precision regularization in the computation of the Cholesky diagonal factors. Increase this for very ill-conditioned systems. Unlike the ``tol`` parameter in some iterative optimization-based algorithms, this parameter does not control the tolerance of the optimization. By default, ``np.finfo(float).eps`` is used\n##### Returns\n* **alphas **: array-like of shape (n_alphas,)\n    Maximum of covariances (in absolute value) at each iteration.\n    ``n_alphas`` is either ``max_iter`` or ``n_features``, whichever\n    is smaller.\n\n* **active **: list\n    Indices of active variables at the end of the path.\n\n* **coefs **: array-like of shape (n_features, n_alphas)\n    Coefficients along the path\n\n* **residues **: array-like of shape (n_alphas, n_samples)\n    Residues of the prediction on the test data\n\n"
}