{
    "source file": "_univariate_selection.py",
    "line number": "233",
    "func name": "f_regression",
    "func arg": "(X, y)",
    "comments": "Univariate linear regression tests.\n\nLinear model for testing the individual effect of each of many regressors. This is a scoring function to be used in a feature selection procedure, not a free standing feature selection procedure.\n\nThis is done in 2 steps:\n\n1. The correlation between each regressor and the target is computed, that is, ((X[:, i]\n\n- mean(X[:, i])) * (y\n\n- mean_y)) / (std(X[:, i]) * std(y)). 2. It is converted to an F score then to a p-value.\n\nFor more on usage see the :ref:`User Guide <univariate_feature_selection>`.\n\nParameters ---------- X : {array-like, sparse matrix}\n\nshape = (n_samples, n_features) The set of regressors that will be tested sequentially.\n\ny : array of shape(n_samples). The data matrix\n\ncenter : bool, default=True If true, X and y will be centered.\n##### Returns\n* **F **: array, shape=(n_features,)\n    F values of features.\n\n* **pval **: array, shape=(n_features,)\n    p-values of F-scores.\n\n* **mutual_info_regression**: Mutual information for a continuous target.\n\n* **f_classif**: ANOVA F-value between label/feature for classification tasks.\n\n* **chi2**: Chi-squared stats of non-negative features for classification tasks.\n\n* **SelectKBest**: Select features based on the k highest scores.\n\n* **SelectFpr**: Select features based on a false positive rate test.\n\n* **SelectFdr**: Select features based on an estimated false discovery rate.\n\n* **SelectFwe**: Select features based on family-wise error rate.\n\n* **SelectPercentile**: Select features based on percentile of the highest\n    scores.\n\n"
}